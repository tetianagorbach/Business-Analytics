load("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Bike rental/bike.Rdata")
head(bike)
glimpse(bike)
View(bike)
bike |>
count(weathersit)
bike %>% # this is the same as using pipe operator |>. |> is implemented in base R package, while %>%  is the tidyverse variant of the pipe operator.
count(weathersit)
bike%>%
ggplot() +
geom_bar(weathersit)
bike%>%
ggplot() +
geom_bar(aes(x = weathersit))
View(bike)
View(bike)
bike%>%
summarise(rented_member = sum(member),
rented_nonmember = sum(nonmember))
View(bike)
bike%>%
summarise(rented_member = sum(member))
sum(bike$member)
View(bike)
bike%>%
ggplot() +
geom_point(aes(x = instant, y = member))
bike%>%
ggplot() +
geom_point(aes(x = instant, y = member))
bike%>%
ggplot() +
geom_point(aes(x = instant, y = nonmember))
bike%>%
ggplot() +
geom_point(aes(x = instant, y = member, col = season))
bike%>%
ggplot() +
geom_point(aes(x = instant, y = nonmember, col = season))
bike%>%
ggplot() +
geom_point(aes(x = instant, y = member, col = season)) +
theme_bw()
bike%>%
ggplot() +
geom_point(aes(x = instant, y = nonmember, col = season)) +
theme_bw()
bike%>%
ggplot() +
geom_point(aes(x = instant, y = member, col = season)) +
theme_minimal()
bike%>%
ggplot() +
geom_point(aes(x = instant, y = nonmember, col = season)) +
theme_minimal()
rm(list = ls())
h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
# Do not forget to substitute the path to the file to the path to the file on YOUR computer
load("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Bike rental/bike.Rdata")
head(bike)
View(bike)
bike%>%
mutate(percentage_rented_member = member/total)
bike%>%
mutate(percentage_rented_member = member/total)
bike%>%
mutate(percentage_rented_member = member/total)
rm(list = ls()) # remove all objects from the environment to start with the new exercise.
h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
View(h1)
sum(h1$IsCanceled)/nrow(h1)
rm(list = ls()) # remove all objects from the environment to start with the new exercise.
h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
glimpse(h1)
#| include: TRUE
#| echo: TRUE
# see more about chunk options, such as include and echo,  at https://quarto.org/docs/computations/execution-options.html
library(tidyverse)
glimpse(h1)
h1 <- h1%>%
mutate(IsCanceled = as.numeric(as.character(IsCanceled)))
glimpse(h1)
sum(h1$IsCanceled)/nrow(h1)
table(h1$IsCanceled)
table(h1$IsCanceled)[,2]
sum(h1$IsCanceled)/nrow(h1)
h1%>%
mutate(IsCanceled = as.numeric(as.character(IsCanceled)))%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h1))
h2%>%
mutate(IsCanceled = as.numeric(as.character(IsCanceled)))%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h2))
h1%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h1))
h1%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h1))
h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
h1%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h1))
h1%>%
mutate(IsCanceled = as.numeric(as.character(IsCanceled)))%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h1))
h2%>%
mutate(IsCanceled = as.numeric(as.character(IsCanceled)))%>%
summarise(proportion_canceled = sum(IsCanceled)/nrow(h2))
View(h1)
View(h1)
?geom_bar
h1%>%
ggplot()+
geom_bar(aes(y = isCancelled, x = ArrivalDateMonth))
h1%>%
ggplot()+
geom_bar(aes(y = isCanceled, x = ArrivalDateMonth))
h1%>%
ggplot()+
geom_bar(aes(y = IsCanceled, x = ArrivalDateMonth))
h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
View(h1)
28938 + 11122
h1%>%
ggplot()+
geom_bar(aes(y = IsCanceled))
h1%>%
ggplot()
geom_bar(aes(x = IsCanceled, ))
geom_bar(aes(x = IsCanceled ))
h1%>%
ggplot()
geom_bar(aes(x = IsCanceled ))
View(h1)
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled ))
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled ))
h1%>%
ggplot()+
geom_bar(aes(x =  IsCanceled ))
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled )) +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled )) +
geom_bar(position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled )) +
geom_bar(position = "fill")
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled ))
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled )) +
geom_bar(position = "fill")
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
View(h1)
names(h1)
h1%>%
ggplot()+
geom_bar(aes(x = StaysInWeekendNights, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = StaysInWeekNights, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = StaysInWeekNights, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = ArrivalDateMonth, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = ADR, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = ADR, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = PreviousBookingsNotCanceled, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = PreviousBookingsNotCanceled, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = Babies, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = Babies, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled)) +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled)) +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h2%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled), position = "fill") +
scale_y_continuous(labels = scales::percent)
h1%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled))
h2%>%
ggplot()+
geom_bar(aes(x = IsRepeatedGuest, fill = IsCanceled))
load("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Charles_book_club/CharlesBookClub.RData")
# Do not forget to substitute the path to the file to the path to the file on YOUR computer.
# on Windows, the paths might look like  "C:\\Users\\YourUsername\\Documents\\data.csv"
# on MAC OS, the paths look like "/Users/YourUsername/Documents/data.csv"
data_club <- read.csv("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/CharlesBookClub.csv")
#| include: TRUE
#| echo: TRUE
# see more about chunk options, such as include and echo,  at https://quarto.org/docs/computations/execution-options.html
library(tidyverse)
# Do not forget to substitute the path to the file to the path to the file on YOUR computer.
# on Windows, the paths might look like  "C:\\Users\\YourUsername\\Documents\\data.csv"
# on MAC OS, the paths look like "/Users/YourUsername/Documents/data.csv"
data_club <- read.csv("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/CharlesBookClub.csv")
# Do not forget to substitute the path to the file to the path to the file on YOUR computer.
# on Windows, the paths might look like  "C:\\Users\\YourUsername\\Documents\\data.csv"
# on MAC OS, the paths look like "/Users/YourUsername/Documents/data.csv"
data_club <- read.csv("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Charles_book_club/CharlesBookClub.csv")
View(data_club)
View(book)
names(data_club)
names(book)
# Do not forget to substitute the path to the file to the path to the file on YOUR computer.
# on Windows, the paths might look like  "C:\\Users\\YourUsername\\Documents\\data.csv"
# on MAC OS, the paths look like "/Users/YourUsername/Documents/data.csv"
load("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Charles_book_club/CharlesBookClub.Rdata")
head(book)
glimpse(book)
rm(list = ls()) # remove all objects from the environment to start with the new exercise.
load("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Charles_book_club/CharlesBookClub.Rdata")
# h1 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H1.rds")
# h2 <- readRDS("/Users/gote0002/Documents/GitHub/Business-Analytics/Data sets/Hotel_demand/data_hotel/H2.rds")
View(book)
View(book)
book%>%
summarise(proportion_bought = sum(Florence)/nrow(book))
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence), position = "fill")
View(book)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence))
book%>%
ggplot()+
geom_bar(aes(group = Gender, fill = Florence))
table(book$Gender, book$Florence)
book%>%
summarise(proportion_bought = sum(Florence)/nrow(book))
book %>%
count(Gender, Florence)
book %>%
count(Gender, Florence) %>%                       # Step 1: Count the combinations
group_by(Gender) %>%                              # Step 2: Group by Gender
mutate(percentage = n / sum(n) * 100) %>%         # Step 3: Calculate percentage
ungroup()
book %>%
count(M, Florence) %>%                       # Step 1: Count the combinations
group_by(M) %>%                              # Step 2: Group by Gender
mutate(percentage = n / sum(n) * 100) %>%         # Step 3: Calculate percentage
ungroup()
book %>%
count(F, Florence) %>%                       # Step 1: Count the combinations
group_by(F) %>%                              # Step 2: Group by Gender
mutate(percentage = n / sum(n) * 100) %>%         # Step 3: Calculate percentage
ungroup()
ggplot(book, aes(x = F)) +
geom_histogram(binwidth = 1, color = "black", fill = "blue") +
facet_wrap(~ Florence) +
labs(title = "Histogram of F by Florence",
x = "F",
y = "Count") +
theme_minimal()
ggplot(book, aes(x = F)) +
geom_histogram(binwidth = 1, color = "black", fill = "Florence") +
labs(title = "Histogram of F by Florence",
x = "F",
y = "Count") +
theme_minimal()
ggplot(book, aes(x = F)) +
geom_histogram(fill = "Florence") +
labs(title = "Histogram of F by Florence",
x = "F",
y = "Count") +
theme_minimal()
ggplot(book, aes(x = F)) +
geom_histogram(aes(x = F, fill = "Florence")) +
labs(title = "Histogram of F by Florence",
x = "F",
y = "Count") +
theme_minimal()
ggplot(book) +
geom_histogram(aes(x = F, fill = "Florence")) +
theme_minimal()
ggplot(book) +
geom_histogram(aes(x = F, fill = Florence)) +
theme_minimal()
ggplot(book) +
geom_histogram(aes(x = F, group = Florence, fill = Florence)) +
theme_minimal()
book %>%
count(Gender, Florence)
book %>%
count(Gender, Florence) %>%                       # Step 1: Count the combinations
group_by(Gender) %>%                              # Step 2: Group by Gender
mutate(percentage_of_each_gender = n / sum(n) * 100) %>%         # Step 3: Calculate percentage
ungroup()
ggplot(book) +
geom_histogram(aes(x = F, fill = Florence), position = "identity", alpha = 0.6)
ggplot(book) +
geom_histogram(aes(x = F, fill = as.character(Florence)), position = "identity", alpha = 0.6)
ggplot(book) +
geom_histogram(aes(x = F, group = as.character(Florence)), position = "identity", alpha = 0.6)
?geom_histogram
ggplot(book) +
geom_histogram(aes(x = F,group = as.character(Florence)),
position = "identity", alpha = 0.6)
View(book)
ggplot(book) +
geom_histogram(aes(x = F,group = as.character(Florence)),
position = "identity")
book%>%
ggplot() +
geom_histogram(aes(x = F,group = as.character(Florence)),
position = "identity")
book%>%
ggplot() +
geom_histogram(aes(x = F,group = as.character(Florence)),
position = "identity", alpha = 0.6)
book%>%
ggplot() +
geom_histogram(aes(x = F,group = as.character(Florence)),
position = "identity", alpha = 0.6) +
facet_wrap(~ Florence)
book%>%
ggplot() +
geom_histogram(aes(x = M,group = as.character(Florence)),
position = "identity", alpha = 0.6) +
facet_wrap(~ Florence)
book%>%
ggplot() +
geom_histogram(aes(x = R,group = as.character(Florence)),
position = "identity", alpha = 0.6) +
facet_wrap(~ Florence)
book%>%
summarise(proportion_bought = sum(Florence)/nrow(book))
View(book)
glimpse(book)
book %>%
count(Gender, Florence) %>%                       # Step 1: Count the combinations
group_by(Gender) %>%                              # Step 2: Group by Gender
mutate(percentage_of_each_gender = n / sum(n) * 100) %>%         # Step 3: Calculate percentage
ungroup()
book %>%
count(Gender, Florence) %>%  # Step 1: Count the combinations
group_by(Gender) %>%  # Step 2: Group by Gender
mutate(percentage_of_each_gender = n / sum(n) * 100) %>%  # Step 3: Calculate percentage
ungroup()
book%>%
ggplot() +
geom_histogram(aes(x = R, group = as.character(Florence)),
position = "identity", alpha = 0.6) +
facet_wrap(~ Florence)
book%>%
ggplot() +
geom_histogram(aes(x = R, fill = as.character(Florence)),
position = "identity", alpha = 0.6) +
facet_wrap(~ Florence)
book%>%
ggplot()+
geom_bar(aes(group = Gender, fill = Florence))
book%>%
ggplot()+
geom_bar(aes(group = Gender, fill = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(group = as.character(Gender), fill = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(group = as.character(Gender), y = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(group = as.character(Gender), x = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = as.character(Gender), group = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, group = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence), position = "fill") +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence)) +
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = Florence))
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = as.character(Florence)))
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = as.character(Florence)) )+
scale_y_continuous(labels = scales::percent)
book%>%
ggplot()+
geom_bar(aes(x = Gender, fill = as.character(Florence)), position = "fill", stat = "identity" )+
scale_y_continuous(labels = scales::percent)
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
View(data)
book %>%
count(Gender, Florence) %>%                          # Count the occurrences of each combination
group_by(Gender) %>%                                 # Group by Gender
mutate(percentage = n / sum(n)) %>%                  # Calculate percentage within each Gender group
ggplot(aes(x = Gender, y = percentage, fill = as.character(Florence))) +
geom_bar(stat = "identity") +                        # Use 'identity' to use precomputed values
scale_y_continuous(labels = scales::percent) +       # Format y-axis labels as percentages
labs(title = "Percentage of Book Purchases by Gender and Florence",
x = "Gender",
y = "Percentage",
fill = "Florence") +
theme_minimal()
book %>%
count(Gender, Florence) %>%                          # Count the occurrences of each combination
group_by(as.character(Gender) )%>%                                 # Group by Gender
mutate(percentage = n / sum(n)) %>%                  # Calculate percentage within each Gender group
ggplot(aes(x = Gender, y = percentage, fill = as.character(Florence))) +
geom_bar(stat = "identity") +                        # Use 'identity' to use precomputed values
scale_y_continuous(labels = scales::percent) +       # Format y-axis labels as percentages
labs(title = "Percentage of Book Purchases by Gender and Florence",
x = "Gender",
y = "Percentage",
fill = "Florence") +
theme_minimal()
book %>%
count(Gender, Florence) %>%                          # Count the occurrences of each combination
group_by(Gender) %>%                                 # Group by Gender
mutate(percentage = n / sum(n)) %>%                  # Calculate percentage within each Gender group
ggplot(aes(x = Gender, y = percentage, fill = as.character(Florence))) +
geom_bar(stat = "identity") +                        # Use 'identity' to use precomputed values
scale_y_continuous(labels = scales::percent) +       # Format y-axis labels as percentages
labs(title = "Percentage of Book Purchases by Gender and Florence",
x = "Gender",
y = "Percentage",
fill = "Florence") +
theme_minimal()
