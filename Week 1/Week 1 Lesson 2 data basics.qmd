---
title: "Week 1 Case study data basics"
format: html
editor: visual
---

# Exercise 1.

```{r, load libraries}
#| include: TRUE
#| echo: TRUE
# see more about chunk options, such as include and echo,  at https://quarto.org/docs/computations/execution-options.html
library(tidyverse)
```

To start working with the data, you might

-   download data file to your computer and to THE SAME FOLDER AS THIS QUARTO FILE (!!!!)

-   render this file and look at the output in your default browser.

Continue working with the data by adding new code chunks, writing and executing the written code, rendering the file.

```{r load bike data}
load("bike.Rdata") 
```

Take a look at the first couple of rows of the data:

```{r, first 6 rows}
head(bike)
```

Get a glimpse of the data:

```{r}
glimpse(bike)
```

```{r, count types of weather}
bike%>%
  summarise(rented_member = sum(member))
sum(bike$member)
```

```{r}
bike%>%
  mutate(percentage_rented_member = member/total)
```

```{r, visualize number of days per type of weather}
bike%>%
  ggplot() + 
  geom_point(aes(x = instant, y = member, col = season)) + 
  theme_minimal()
bike%>%
  ggplot() + 
  geom_point(aes(x = instant, y = nonmember, col = season)) + 
  theme_minimal()

```

# Exercise 2.

First, remove all objects from the environment to start with the new exercise.

```{r}
rm(list = ls()) # remove all objects from the environment to start with the new exercise.
```

```{r}

load("CharlesBookClub.Rdata") 
```

```{r}
glimpse(book)
```

Proportions of members that bought the book "The Art history of Florence"

```{r}
book%>%
  summarise(proportion_bought = sum(Florence)/nrow(book))

book %>%
  count(Gender, Florence)
```

Percentage of those, who bought the book "The Art history of Florence" by gender

```{r}
book %>%
  count(Gender, Florence) %>%  # Step 1: Count the combinations
  group_by(Gender) %>%  # Step 2: Group by Gender
  mutate(percentage_of_each_gender = n / sum(n) * 100) %>%  # Step 3: Calculate percentage
  ungroup()
```

```{r}
book %>%
  count(Gender, Florence) %>%                          # Count the occurrences of each combination
  group_by(Gender) %>%                                 # Group by Gender
  mutate(percentage = n / sum(n)) %>%                  # Calculate percentage within each Gender group
  ggplot(aes(x = Gender, y = percentage, fill = as.character(Florence))) + 
  geom_bar(stat = "identity") +                        # Use 'identity' to use precomputed values
  scale_y_continuous(labels = scales::percent) +       # Format y-axis labels as percentages
  labs(title = "Percentage of Book Purchases by Gender and Florence",
       x = "Gender",
       y = "Percentage",
       fill = "Florence") +
  theme_minimal()
```
